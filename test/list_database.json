[
    {
        "id": "42d4ebc95f2da8bf",
        "type": "tab",
        "label": "list_database",
        "disabled": false,
        "info": " 1. Input: default value\r\n - limit: 10\r\n - include: \"non-deleted\"\r\n\r\n 2. Expected: Return all database service non-deleted (max 10 records)\r\n - total databases service: 4 (ex_dbservice, PGSpider, PostgreSQL, test_dbservice)\r\n - deleted databases service: 2 (ex_dbservice, test_dbservice)\r\n=> return 2 databases service non-deleted: PGSpider, PostgreSQL",
        "env": []
    },
    {
        "id": "a5e0a6d170471132",
        "type": "group",
        "z": "42d4ebc95f2da8bf",
        "name": "",
        "style": {
            "label": true,
            "stroke": "#0070c0"
        },
        "nodes": [
            "f3128186f5976190",
            "efe56cb09a9ed907",
            "5238a0814b0f4091",
            "a741645cddc8ef96",
            "19caeddcf7f56a10",
            "36917d57fb77a4f3",
            "be8b7e146295c666",
            "0a9129dd3d1b5ae5",
            "a903eb25ac6988db",
            "81dd0243280398f2",
            "6bb775529846d2f4",
            "04c9b9a35b89afcc"
        ],
        "x": 194,
        "y": 99,
        "w": 1152,
        "h": 286.111328125
    },
    {
        "id": "c0e2cb95ae566d8f",
        "type": "group",
        "z": "42d4ebc95f2da8bf",
        "name": "",
        "style": {
            "stroke": "#0070c0",
            "label": true
        },
        "nodes": [
            "6a618c43c1ab53b9",
            "bfc3f27491b9f536",
            "57e93ac324e839af",
            "1b6082822ba41265",
            "b8e0b9b1d1d34a18",
            "5735230cb161e1a7",
            "3344e23b701bf25d",
            "4edb528bfa050c20",
            "3d1257b80c822cb9",
            "3fc2ae9af173173e",
            "c570cc3fd6108e4a",
            "195e7bd5154918b7"
        ],
        "x": 194,
        "y": 439,
        "w": 1232,
        "h": 322
    },
    {
        "id": "bb427ba1d9d7a271",
        "type": "group",
        "z": "42d4ebc95f2da8bf",
        "name": "",
        "style": {
            "stroke": "#0070c0",
            "label": true
        },
        "nodes": [
            "de6ce185e5e150bb",
            "d9d480247eeed009",
            "d848778714a9a826",
            "337ab44f517db33b",
            "6cce56e79c1b5c03",
            "f6d11bd217b8e11b",
            "fded570351f7ee19",
            "68b64e55db963f73",
            "c35c8bcac58130ae",
            "b768abd53ac2f808",
            "863793d25396ae38",
            "073abb641aee387c",
            "347ab17de950cdc4",
            "d54ca4d545a440c9",
            "a0bbc8346577650d",
            "d58c80b3354369b2",
            "1ba35dce19b1cff7",
            "5d50141accb9f133"
        ],
        "x": 194,
        "y": 839,
        "w": 1332,
        "h": 442
    },
    {
        "id": "4db8849e259e1a49",
        "type": "comment",
        "z": "42d4ebc95f2da8bf",
        "name": "Test suite: List database",
        "info": "",
        "x": 100,
        "y": 60,
        "wires": []
    },
    {
        "id": "f3128186f5976190",
        "type": "test inject",
        "z": "42d4ebc95f2da8bf",
        "g": "a5e0a6d170471132",
        "name": "",
        "onstart": false,
        "tests": "return [{\n\tlabel: 'test 1',\n\tassert: function (msg) {\n        // msg.result === msg.expected;\n\t\tshould(msg.result).is.exactly(msg.expected);\n\t}\n}];",
        "x": 420,
        "y": 220,
        "wires": [
            [
                "be8b7e146295c666"
            ]
        ]
    },
    {
        "id": "efe56cb09a9ed907",
        "type": "json",
        "z": "42d4ebc95f2da8bf",
        "g": "a5e0a6d170471132",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 710,
        "y": 300,
        "wires": [
            [
                "6bb775529846d2f4"
            ]
        ]
    },
    {
        "id": "5238a0814b0f4091",
        "type": "assert",
        "z": "42d4ebc95f2da8bf",
        "g": "a5e0a6d170471132",
        "name": "",
        "x": 1270,
        "y": 280,
        "wires": [
            []
        ]
    },
    {
        "id": "a741645cddc8ef96",
        "type": "comment",
        "z": "42d4ebc95f2da8bf",
        "g": "a5e0a6d170471132",
        "name": "Actual result from openmetadata node",
        "info": "",
        "x": 810,
        "y": 220,
        "wires": []
    },
    {
        "id": "19caeddcf7f56a10",
        "type": "complete",
        "z": "42d4ebc95f2da8bf",
        "g": "a5e0a6d170471132",
        "name": "",
        "scope": [
            "f3128186f5976190"
        ],
        "uncaught": false,
        "x": 410,
        "y": 320,
        "wires": [
            [
                "6a618c43c1ab53b9"
            ]
        ]
    },
    {
        "id": "36917d57fb77a4f3",
        "type": "comment",
        "z": "42d4ebc95f2da8bf",
        "g": "a5e0a6d170471132",
        "name": "TC11: List all databases with default value",
        "info": " 1. Input: default value\n - All N/A\n\n 2. Expected: Return all databases non-deleted (max 10 records)\n - total databases: 9\n - deleted database: 2\n=> return 7 databases non-deleted",
        "x": 380,
        "y": 140,
        "wires": []
    },
    {
        "id": "be8b7e146295c666",
        "type": "openmetadata",
        "z": "42d4ebc95f2da8bf",
        "g": "a5e0a6d170471132",
        "nodename": "",
        "openMetadataConfig": "ed60dcee1fc8d735",
        "resource": "list_databases",
        "showOptParams": true,
        "q": "*",
        "name": "PostgreSQL",
        "id_param": "#",
        "fqn": "postgres.test",
        "startTs": "1",
        "endTs": "10",
        "index": "table_search_index",
        "deleted": "false",
        "from": 0,
        "size": 10,
        "sort_field": "_score",
        "sort_order": "desc",
        "track_total_hits": "false",
        "query_filter": "",
        "post_filter": "",
        "fetch_source": "true",
        "include_source_fields": "",
        "parent": "",
        "fields": "",
        "domain": "",
        "service": "",
        "database": "",
        "disabled": "",
        "databaseSchema": "",
        "includeEmptyTestSuite": "true",
        "limit": "",
        "before": "",
        "after": "",
        "include": "",
        "qFieldType": "str",
        "nameFieldType": "str",
        "id_paramFieldType": "str",
        "fqnFieldType": "str",
        "startTsFieldType": "num",
        "endTsFieldType": "num",
        "indexFieldType": "str",
        "deletedFieldType": "bool",
        "fromFieldType": "num",
        "sizeFieldType": "num",
        "sort_fieldFieldType": "str",
        "sort_orderFieldType": "str",
        "track_total_hitsFieldType": "bool",
        "query_filterFieldType": "str",
        "post_filterFieldType": "str",
        "fetch_sourceFieldType": "bool",
        "include_source_fieldsFieldType": "str",
        "parentFieldType": "str",
        "fieldsFieldType": "str",
        "domainFieldType": "str",
        "serviceFieldType": "str",
        "databaseFieldType": "str",
        "disabledFieldType": "str",
        "databaseSchemaFieldType": "str",
        "includeEmptyTestSuiteFieldType": "bool",
        "limitFieldType": "num",
        "beforeFieldType": "str",
        "afterFieldType": "str",
        "includeFieldType": "str",
        "x": 740,
        "y": 260,
        "wires": [
            [
                "efe56cb09a9ed907"
            ]
        ]
    },
    {
        "id": "0a9129dd3d1b5ae5",
        "type": "http request",
        "z": "42d4ebc95f2da8bf",
        "g": "a5e0a6d170471132",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://10.0.2.15:8585/api/v1/databases",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "bearer",
        "senderr": false,
        "headers": [],
        "x": 1050,
        "y": 260,
        "wires": [
            [
                "a903eb25ac6988db"
            ]
        ]
    },
    {
        "id": "a903eb25ac6988db",
        "type": "json",
        "z": "42d4ebc95f2da8bf",
        "g": "a5e0a6d170471132",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 1030,
        "y": 300,
        "wires": [
            [
                "04c9b9a35b89afcc"
            ]
        ]
    },
    {
        "id": "81dd0243280398f2",
        "type": "comment",
        "z": "42d4ebc95f2da8bf",
        "g": "a5e0a6d170471132",
        "name": "Expected result from REST API",
        "info": "",
        "x": 1110,
        "y": 220,
        "wires": []
    },
    {
        "id": "6bb775529846d2f4",
        "type": "change",
        "z": "42d4ebc95f2da8bf",
        "g": "a5e0a6d170471132",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 740,
        "y": 340,
        "wires": [
            [
                "0a9129dd3d1b5ae5"
            ]
        ]
    },
    {
        "id": "04c9b9a35b89afcc",
        "type": "change",
        "z": "42d4ebc95f2da8bf",
        "g": "a5e0a6d170471132",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "expected",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1046.895751953125,
        "y": 344.111328125,
        "wires": [
            [
                "5238a0814b0f4091"
            ]
        ]
    },
    {
        "id": "e5a076d1df351b63",
        "type": "inject",
        "z": "42d4ebc95f2da8bf",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 100,
        "y": 160,
        "wires": [
            [
                "f3128186f5976190"
            ]
        ]
    },
    {
        "id": "6a618c43c1ab53b9",
        "type": "test inject",
        "z": "42d4ebc95f2da8bf",
        "g": "c0e2cb95ae566d8f",
        "name": "",
        "onstart": false,
        "tests": "return [{\n\tlabel: 'test 1',\n\tassert: function (msg) {\n        // msg.result === msg.expected;\n\t\tshould(msg.name).is.exactly(msg.nameExpected);\n\t\tshould(msg.owner).is.exactly(msg.ownerExpected);\n\t}\n}];",
        "x": 500,
        "y": 560,
        "wires": [
            [
                "195e7bd5154918b7"
            ]
        ]
    },
    {
        "id": "bfc3f27491b9f536",
        "type": "complete",
        "z": "42d4ebc95f2da8bf",
        "g": "c0e2cb95ae566d8f",
        "name": "",
        "scope": [
            "6a618c43c1ab53b9"
        ],
        "uncaught": false,
        "x": 550,
        "y": 720,
        "wires": [
            [
                "de6ce185e5e150bb"
            ]
        ]
    },
    {
        "id": "57e93ac324e839af",
        "type": "comment",
        "z": "42d4ebc95f2da8bf",
        "g": "c0e2cb95ae566d8f",
        "name": "TC12: List all databases with more fields",
        "info": " 1. Input: \n - fields: \"owner,databaseSchemas,usageSummary\"\n - service: \"PostgreSQL\"\n - limit: 5\n - include: \"all\"\n\n 2. Expected: Return all databases  with specified service, and more fields \"owner,databaseSchemas,usageSummary\"",
        "x": 380,
        "y": 480,
        "wires": []
    },
    {
        "id": "1b6082822ba41265",
        "type": "json",
        "z": "42d4ebc95f2da8bf",
        "g": "c0e2cb95ae566d8f",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 770,
        "y": 620,
        "wires": [
            [
                "3fc2ae9af173173e"
            ]
        ]
    },
    {
        "id": "b8e0b9b1d1d34a18",
        "type": "assert",
        "z": "42d4ebc95f2da8bf",
        "g": "c0e2cb95ae566d8f",
        "name": "",
        "x": 1350,
        "y": 600,
        "wires": [
            []
        ]
    },
    {
        "id": "5735230cb161e1a7",
        "type": "comment",
        "z": "42d4ebc95f2da8bf",
        "g": "c0e2cb95ae566d8f",
        "name": "Actual result from openmetadata node",
        "info": "",
        "x": 870,
        "y": 540,
        "wires": []
    },
    {
        "id": "3344e23b701bf25d",
        "type": "http request",
        "z": "42d4ebc95f2da8bf",
        "g": "c0e2cb95ae566d8f",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://10.0.2.15:8585/api/v1/databases?fields=databaseSchemas%2CusageSummary&service=PostgreSQL&limit=5&include=all",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "bearer",
        "senderr": false,
        "headers": [],
        "x": 1110,
        "y": 580,
        "wires": [
            [
                "4edb528bfa050c20"
            ]
        ]
    },
    {
        "id": "4edb528bfa050c20",
        "type": "json",
        "z": "42d4ebc95f2da8bf",
        "g": "c0e2cb95ae566d8f",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 1090,
        "y": 620,
        "wires": [
            [
                "c570cc3fd6108e4a"
            ]
        ]
    },
    {
        "id": "3d1257b80c822cb9",
        "type": "comment",
        "z": "42d4ebc95f2da8bf",
        "g": "c0e2cb95ae566d8f",
        "name": "Expected result from REST API",
        "info": "",
        "x": 1170,
        "y": 540,
        "wires": []
    },
    {
        "id": "3fc2ae9af173173e",
        "type": "change",
        "z": "42d4ebc95f2da8bf",
        "g": "c0e2cb95ae566d8f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 800,
        "y": 660,
        "wires": [
            [
                "3344e23b701bf25d"
            ]
        ]
    },
    {
        "id": "c570cc3fd6108e4a",
        "type": "change",
        "z": "42d4ebc95f2da8bf",
        "g": "c0e2cb95ae566d8f",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "expected",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 660,
        "wires": [
            [
                "b8e0b9b1d1d34a18"
            ]
        ]
    },
    {
        "id": "195e7bd5154918b7",
        "type": "openmetadata",
        "z": "42d4ebc95f2da8bf",
        "g": "c0e2cb95ae566d8f",
        "nodename": "",
        "openMetadataConfig": "ed60dcee1fc8d735",
        "resource": "list_databases",
        "showOptParams": true,
        "q": "*",
        "name": "PostgreSQL",
        "id_param": "#",
        "fqn": "postgres.test",
        "startTs": "1",
        "endTs": "10",
        "index": "table_search_index",
        "deleted": "false",
        "from": 0,
        "size": 10,
        "sort_field": "_score",
        "sort_order": "desc",
        "track_total_hits": "false",
        "query_filter": "",
        "post_filter": "",
        "fetch_source": "true",
        "include_source_fields": "",
        "parent": "",
        "fields": "databaseSchemas,usageSummary",
        "domain": "",
        "service": "PostgreSQL",
        "database": "",
        "disabled": "",
        "databaseSchema": "",
        "includeEmptyTestSuite": "true",
        "limit": "5",
        "before": "",
        "after": "",
        "include": "all",
        "qFieldType": "str",
        "nameFieldType": "str",
        "id_paramFieldType": "str",
        "fqnFieldType": "str",
        "startTsFieldType": "num",
        "endTsFieldType": "num",
        "indexFieldType": "str",
        "deletedFieldType": "bool",
        "fromFieldType": "num",
        "sizeFieldType": "num",
        "sort_fieldFieldType": "str",
        "sort_orderFieldType": "str",
        "track_total_hitsFieldType": "bool",
        "query_filterFieldType": "str",
        "post_filterFieldType": "str",
        "fetch_sourceFieldType": "bool",
        "include_source_fieldsFieldType": "str",
        "parentFieldType": "str",
        "fieldsFieldType": "str",
        "domainFieldType": "str",
        "serviceFieldType": "str",
        "databaseFieldType": "str",
        "disabledFieldType": "str",
        "databaseSchemaFieldType": "str",
        "includeEmptyTestSuiteFieldType": "bool",
        "limitFieldType": "num",
        "beforeFieldType": "str",
        "afterFieldType": "str",
        "includeFieldType": "str",
        "x": 800,
        "y": 580,
        "wires": [
            [
                "1b6082822ba41265"
            ]
        ]
    },
    {
        "id": "de6ce185e5e150bb",
        "type": "test inject",
        "z": "42d4ebc95f2da8bf",
        "g": "bb427ba1d9d7a271",
        "name": "",
        "onstart": false,
        "tests": "return [{\n\tlabel: 'test 1',\n\tassert: function (msg) {\n        // msg.result === msg.expected;\n\t\tshould(msg.result).is.exactly(msg.expected);\n\t}\n}];",
        "x": 520,
        "y": 940,
        "wires": [
            [
                "5d50141accb9f133"
            ]
        ]
    },
    {
        "id": "d9d480247eeed009",
        "type": "json",
        "z": "42d4ebc95f2da8bf",
        "g": "bb427ba1d9d7a271",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 810,
        "y": 1200,
        "wires": [
            [
                "6cce56e79c1b5c03"
            ]
        ]
    },
    {
        "id": "d848778714a9a826",
        "type": "assert",
        "z": "42d4ebc95f2da8bf",
        "g": "bb427ba1d9d7a271",
        "name": "",
        "x": 1450,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "337ab44f517db33b",
        "type": "change",
        "z": "42d4ebc95f2da8bf",
        "g": "bb427ba1d9d7a271",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "expected",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1250,
        "y": 1240,
        "wires": [
            [
                "d848778714a9a826"
            ]
        ]
    },
    {
        "id": "6cce56e79c1b5c03",
        "type": "change",
        "z": "42d4ebc95f2da8bf",
        "g": "bb427ba1d9d7a271",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 1240,
        "wires": [
            [
                "f6d11bd217b8e11b"
            ]
        ]
    },
    {
        "id": "f6d11bd217b8e11b",
        "type": "http request",
        "z": "42d4ebc95f2da8bf",
        "g": "bb427ba1d9d7a271",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://10.0.2.15:8585/api/v1/databases?service=PGSpider&before={{{before}}}&include=all",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "bearer",
        "senderr": false,
        "headers": [],
        "x": 1230,
        "y": 1160,
        "wires": [
            [
                "fded570351f7ee19"
            ]
        ]
    },
    {
        "id": "fded570351f7ee19",
        "type": "json",
        "z": "42d4ebc95f2da8bf",
        "g": "bb427ba1d9d7a271",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 1210,
        "y": 1200,
        "wires": [
            [
                "337ab44f517db33b"
            ]
        ]
    },
    {
        "id": "68b64e55db963f73",
        "type": "comment",
        "z": "42d4ebc95f2da8bf",
        "g": "bb427ba1d9d7a271",
        "name": "Actual result from openmetadata node",
        "info": "",
        "x": 910,
        "y": 1120,
        "wires": []
    },
    {
        "id": "c35c8bcac58130ae",
        "type": "comment",
        "z": "42d4ebc95f2da8bf",
        "g": "bb427ba1d9d7a271",
        "name": "Expected result from REST API",
        "info": "",
        "x": 1290,
        "y": 1120,
        "wires": []
    },
    {
        "id": "b768abd53ac2f808",
        "type": "complete",
        "z": "42d4ebc95f2da8bf",
        "g": "bb427ba1d9d7a271",
        "name": "",
        "scope": [
            "de6ce185e5e150bb"
        ],
        "uncaught": false,
        "x": 530,
        "y": 1180,
        "wires": [
            []
        ]
    },
    {
        "id": "863793d25396ae38",
        "type": "comment",
        "z": "42d4ebc95f2da8bf",
        "g": "bb427ba1d9d7a271",
        "name": "TC13: List databases on a service with before",
        "info": " 1. Input: \n - service: \"PGSpider\"\n - before: before 2nd element (get value from another openmetadata node)\n - include: \"all\"\n\n 2. Expected: Return database from \"after\" position (max 5 databases)",
        "x": 390,
        "y": 880,
        "wires": []
    },
    {
        "id": "073abb641aee387c",
        "type": "comment",
        "z": "42d4ebc95f2da8bf",
        "g": "bb427ba1d9d7a271",
        "name": "Get before param",
        "info": "",
        "x": 840,
        "y": 900,
        "wires": []
    },
    {
        "id": "347ab17de950cdc4",
        "type": "change",
        "z": "42d4ebc95f2da8bf",
        "g": "bb427ba1d9d7a271",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "before",
                "pt": "msg",
                "to": "payload.paging.before",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 840,
        "y": 1060,
        "wires": [
            [
                "1ba35dce19b1cff7"
            ]
        ]
    },
    {
        "id": "d54ca4d545a440c9",
        "type": "comment",
        "z": "42d4ebc95f2da8bf",
        "g": "bb427ba1d9d7a271",
        "name": "Clean flow's variable",
        "info": "",
        "x": 550,
        "y": 1140,
        "wires": []
    },
    {
        "id": "a0bbc8346577650d",
        "type": "change",
        "z": "42d4ebc95f2da8bf",
        "g": "bb427ba1d9d7a271",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "after",
                "pt": "msg",
                "to": "payload.paging.after",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 830,
        "y": 980,
        "wires": [
            [
                "d58c80b3354369b2"
            ]
        ]
    },
    {
        "id": "d58c80b3354369b2",
        "type": "openmetadata",
        "z": "42d4ebc95f2da8bf",
        "g": "bb427ba1d9d7a271",
        "nodename": "",
        "openMetadataConfig": "ed60dcee1fc8d735",
        "resource": "list_database_services",
        "showOptParams": true,
        "q": "*",
        "name": "PostgreSQL",
        "id_param": "#",
        "fqn": "postgres.test",
        "startTs": "1",
        "endTs": "10",
        "index": "table_search_index",
        "deleted": "false",
        "from": 0,
        "size": 10,
        "sort_field": "_score",
        "sort_order": "desc",
        "track_total_hits": "false",
        "query_filter": "",
        "post_filter": "",
        "fetch_source": "true",
        "include_source_fields": "",
        "parent": "",
        "fields": "",
        "domain": "",
        "service": "PGSpider",
        "database": "",
        "disabled": "",
        "databaseSchema": "",
        "includeEmptyTestSuite": "true",
        "limit": "1",
        "before": "",
        "after": "after",
        "include": "",
        "qFieldType": "str",
        "nameFieldType": "str",
        "id_paramFieldType": "str",
        "fqnFieldType": "str",
        "startTsFieldType": "num",
        "endTsFieldType": "num",
        "indexFieldType": "str",
        "deletedFieldType": "bool",
        "fromFieldType": "num",
        "sizeFieldType": "num",
        "sort_fieldFieldType": "str",
        "sort_orderFieldType": "str",
        "track_total_hitsFieldType": "bool",
        "query_filterFieldType": "str",
        "post_filterFieldType": "str",
        "fetch_sourceFieldType": "bool",
        "include_source_fieldsFieldType": "str",
        "parentFieldType": "str",
        "fieldsFieldType": "str",
        "domainFieldType": "str",
        "serviceFieldType": "str",
        "databaseFieldType": "str",
        "disabledFieldType": "str",
        "databaseSchemaFieldType": "str",
        "includeEmptyTestSuiteFieldType": "bool",
        "limitFieldType": "num",
        "beforeFieldType": "str",
        "afterFieldType": "msg",
        "includeFieldType": "str",
        "x": 840,
        "y": 1020,
        "wires": [
            [
                "347ab17de950cdc4"
            ]
        ]
    },
    {
        "id": "1ba35dce19b1cff7",
        "type": "openmetadata",
        "z": "42d4ebc95f2da8bf",
        "g": "bb427ba1d9d7a271",
        "nodename": "",
        "openMetadataConfig": "ed60dcee1fc8d735",
        "resource": "list_databases",
        "showOptParams": true,
        "q": "*",
        "name": "PostgreSQL",
        "id_param": "#",
        "fqn": "postgres.test",
        "startTs": "1",
        "endTs": "10",
        "index": "table_search_index",
        "deleted": "false",
        "from": 0,
        "size": 10,
        "sort_field": "_score",
        "sort_order": "desc",
        "track_total_hits": "false",
        "query_filter": "",
        "post_filter": "",
        "fetch_source": "true",
        "include_source_fields": "",
        "parent": "",
        "fields": "",
        "domain": "",
        "service": "PGSpider",
        "database": "",
        "disabled": "",
        "databaseSchema": "",
        "includeEmptyTestSuite": "true",
        "limit": "",
        "before": "before",
        "after": "",
        "include": "all",
        "qFieldType": "str",
        "nameFieldType": "str",
        "id_paramFieldType": "str",
        "fqnFieldType": "str",
        "startTsFieldType": "num",
        "endTsFieldType": "num",
        "indexFieldType": "str",
        "deletedFieldType": "bool",
        "fromFieldType": "num",
        "sizeFieldType": "num",
        "sort_fieldFieldType": "str",
        "sort_orderFieldType": "str",
        "track_total_hitsFieldType": "bool",
        "query_filterFieldType": "str",
        "post_filterFieldType": "str",
        "fetch_sourceFieldType": "bool",
        "include_source_fieldsFieldType": "str",
        "parentFieldType": "str",
        "fieldsFieldType": "str",
        "domainFieldType": "str",
        "serviceFieldType": "str",
        "databaseFieldType": "str",
        "disabledFieldType": "str",
        "databaseSchemaFieldType": "str",
        "includeEmptyTestSuiteFieldType": "bool",
        "limitFieldType": "num",
        "beforeFieldType": "msg",
        "afterFieldType": "str",
        "includeFieldType": "str",
        "x": 840,
        "y": 1160,
        "wires": [
            [
                "d9d480247eeed009"
            ]
        ]
    },
    {
        "id": "5d50141accb9f133",
        "type": "openmetadata",
        "z": "42d4ebc95f2da8bf",
        "g": "bb427ba1d9d7a271",
        "nodename": "",
        "openMetadataConfig": "ed60dcee1fc8d735",
        "resource": "list_databases",
        "showOptParams": true,
        "q": "*",
        "name": "PostgreSQL",
        "id_param": "#",
        "fqn": "postgres.test",
        "startTs": "1",
        "endTs": "10",
        "index": "table_search_index",
        "deleted": "false",
        "from": 0,
        "size": 10,
        "sort_field": "_score",
        "sort_order": "desc",
        "track_total_hits": "false",
        "query_filter": "",
        "post_filter": "",
        "fetch_source": "true",
        "include_source_fields": "",
        "parent": "",
        "fields": "",
        "domain": "",
        "service": "PGSpider",
        "database": "",
        "disabled": "",
        "databaseSchema": "",
        "includeEmptyTestSuite": "true",
        "limit": "2",
        "before": "",
        "after": "",
        "include": "",
        "qFieldType": "str",
        "nameFieldType": "str",
        "id_paramFieldType": "str",
        "fqnFieldType": "str",
        "startTsFieldType": "num",
        "endTsFieldType": "num",
        "indexFieldType": "str",
        "deletedFieldType": "bool",
        "fromFieldType": "num",
        "sizeFieldType": "num",
        "sort_fieldFieldType": "str",
        "sort_orderFieldType": "str",
        "track_total_hitsFieldType": "bool",
        "query_filterFieldType": "str",
        "post_filterFieldType": "str",
        "fetch_sourceFieldType": "bool",
        "include_source_fieldsFieldType": "str",
        "parentFieldType": "str",
        "fieldsFieldType": "str",
        "domainFieldType": "str",
        "serviceFieldType": "str",
        "databaseFieldType": "str",
        "disabledFieldType": "str",
        "databaseSchemaFieldType": "str",
        "includeEmptyTestSuiteFieldType": "bool",
        "limitFieldType": "num",
        "beforeFieldType": "str",
        "afterFieldType": "str",
        "includeFieldType": "str",
        "x": 840,
        "y": 940,
        "wires": [
            [
                "a0bbc8346577650d"
            ]
        ]
    },
    {
        "id": "ed60dcee1fc8d735",
        "type": "openMetadataConfig",
        "name": "token",
        "endpoint": "http://10.0.2.15:8585/api/v1/",
        "endpointFieldType": "str",
        "user": "",
        "userFieldType": "str",
        "password": "",
        "passwordFieldType": "str",
        "tokenInput": "eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImluZ2VzdGlvbi1ib3QiLCJlbWFpbCI6ImluZ2VzdGlvbi1ib3RAb3Blbm1ldGFkYXRhLm9yZyIsImlzQm90Ijp0cnVlLCJ0b2tlblR5cGUiOiJCT1QiLCJpYXQiOjE3MDI5NTM1MTYsImV4cCI6bnVsbH0.ysLDuWqsA8TA5TqwPp0cm8kLu0yQc-RbYBMyMGSY-JCtgR1zRAKpjhAczzFcMHQgXbCGtoXZGE4-OgWDXBoHFFeUXlYxCOFXJOz6K3xPgWM0u6OM0xRYAVGzqpWPzZDO0Wgg5dEV_j86pjCYq4EOuLwGHXhKoFwIi_ezwj8jeUBsmLy0SnaHhE1T4u_hcoikNOVOwpsNq7k9EJigLuIvftfZJacWAzAsNJkwVQymdNNufimUsI4CeZYIowgpYQV2EAoxOBOrnUUeyBx49nmAJAMqbqIzl_rP8KW1EL---Q_mYaHL1o0Qc06JufkpTf3Ir5--CnVZZjEyfYQjJI0jCg",
        "tokenInputFieldType": "str",
        "token": "",
        "proxy": "",
        "proxyFieldType": "str",
        "noproxy": false
    }
]