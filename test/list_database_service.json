[
    {
        "id": "853f3cc508a3240f",
        "type": "tab",
        "label": "list_database_service",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "10e6f2ee93dff354",
        "type": "group",
        "z": "853f3cc508a3240f",
        "name": "",
        "style": {
            "stroke": "#0070c0",
            "label": true
        },
        "nodes": [
            "7225d451d8b45d66",
            "e39f1f7ef4875618",
            "01777fcb3499564a",
            "e4a3aa533b608922",
            "3599af707496bf5f",
            "f12d25fb20e2aabd",
            "0303ba4406f17bac",
            "55d63a78bb72facb",
            "32257a070bf93c14",
            "c96f1ffdcae598ed",
            "fc6f7a1c18650066",
            "05223af5b7921171"
        ],
        "x": 194,
        "y": 159,
        "w": 1272,
        "h": 242
    },
    {
        "id": "0e1610528c455702",
        "type": "group",
        "z": "853f3cc508a3240f",
        "name": "",
        "style": {
            "stroke": "#0070c0",
            "label": true
        },
        "nodes": [
            "05bee43833f6ad31",
            "5053f6b73432d083",
            "391b7a0e56f4cc99",
            "a07b588ac02c789f",
            "aee09ed439fae89f",
            "e758dd25030fba7c",
            "bdbfd08207ab2b72",
            "41e6a8aa7bb48ad4",
            "1cfaeb54d10751bc",
            "29f5b5b28f2c469c",
            "01223cba26843707",
            "a736f09eece0b4d2",
            "e79703e29ef7c886",
            "81052b6c356aa883",
            "0d67fa5465cd8285",
            "b19f26350762e237",
            "a29b742c02621d9f",
            "9efa0940dc0acf4c",
            "88c46a12188121e4",
            "7cd085038970e4cd"
        ],
        "x": 194,
        "y": 479,
        "w": 1152,
        "h": 522
    },
    {
        "id": "14bc8aefafcd06be",
        "type": "group",
        "z": "853f3cc508a3240f",
        "name": "",
        "style": {
            "stroke": "#0070c0",
            "label": true
        },
        "nodes": [
            "3d8a2504f4f72efc",
            "10fec100a7129a62",
            "a16e950852a4f2d2",
            "f6eb933b5e5434ca",
            "218eb660b11a792b",
            "aa944d2e20e2f55c",
            "5ca25ff36168b3ff",
            "44c43d80e8be143b",
            "4e8bf5e454e58235",
            "efcff8868c110a10",
            "eeb7c328322c3e3f",
            "206ff924fa5c88f4",
            "2dbb0a53c7025036",
            "5a5bbca753b4ba70",
            "88dcf2207a6c92e9",
            "2a5b8c40d84c1b92",
            "091b54ae79ac3c22",
            "12256d20e95d2be4",
            "62c303fbddea4832"
        ],
        "x": 194,
        "y": 1159,
        "w": 1212,
        "h": 482
    },
    {
        "id": "cab4e22c30a4fac7",
        "type": "group",
        "z": "853f3cc508a3240f",
        "name": "",
        "style": {
            "stroke": "#0070c0",
            "label": true
        },
        "nodes": [
            "1d87441534043380",
            "08fe9c7be6c0e760",
            "ca541d5168958242",
            "b1abbd5fb2763263",
            "520ff21e03b78921",
            "f61fcf4cc3c7ead8",
            "b7d14aa7600ed23e",
            "791866d5a7b7a81c",
            "82d66aa26afe55dc"
        ],
        "x": 194,
        "y": 1719,
        "w": 1092,
        "h": 342
    },
    {
        "id": "e39f1f7ef4875618",
        "type": "json",
        "z": "853f3cc508a3240f",
        "g": "10e6f2ee93dff354",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 750,
        "y": 320,
        "wires": [
            [
                "3599af707496bf5f"
            ]
        ]
    },
    {
        "id": "e4a3aa533b608922",
        "type": "change",
        "z": "853f3cc508a3240f",
        "g": "10e6f2ee93dff354",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "expected",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1190,
        "y": 360,
        "wires": [
            [
                "01777fcb3499564a"
            ]
        ]
    },
    {
        "id": "3599af707496bf5f",
        "type": "change",
        "z": "853f3cc508a3240f",
        "g": "10e6f2ee93dff354",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 360,
        "wires": [
            [
                "f12d25fb20e2aabd"
            ]
        ]
    },
    {
        "id": "f12d25fb20e2aabd",
        "type": "http request",
        "z": "853f3cc508a3240f",
        "g": "10e6f2ee93dff354",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://10.0.2.15:8585/api/v1/services/databaseServices",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "bearer",
        "senderr": false,
        "headers": [],
        "x": 1170,
        "y": 280,
        "wires": [
            [
                "fc6f7a1c18650066"
            ]
        ]
    },
    {
        "id": "0303ba4406f17bac",
        "type": "comment",
        "z": "853f3cc508a3240f",
        "g": "10e6f2ee93dff354",
        "name": "Actual result from openmetadata node",
        "info": "",
        "x": 850,
        "y": 240,
        "wires": []
    },
    {
        "id": "55d63a78bb72facb",
        "type": "comment",
        "z": "853f3cc508a3240f",
        "g": "10e6f2ee93dff354",
        "name": "Expected result from REST API",
        "info": "",
        "x": 1230,
        "y": 240,
        "wires": []
    },
    {
        "id": "32257a070bf93c14",
        "type": "complete",
        "z": "853f3cc508a3240f",
        "g": "10e6f2ee93dff354",
        "name": "",
        "scope": [
            "7225d451d8b45d66"
        ],
        "uncaught": false,
        "x": 450,
        "y": 340,
        "wires": [
            [
                "05bee43833f6ad31"
            ]
        ]
    },
    {
        "id": "9e0eba501daef728",
        "type": "inject",
        "z": "853f3cc508a3240f",
        "name": "Start test",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 200,
        "y": 100,
        "wires": [
            [
                "7225d451d8b45d66"
            ]
        ]
    },
    {
        "id": "c96f1ffdcae598ed",
        "type": "comment",
        "z": "853f3cc508a3240f",
        "g": "10e6f2ee93dff354",
        "name": "TC01: List all database service with parameters have default values",
        "info": " 1. Input: default value\n\n 2. Expected: Return all database service non-deleted (max 10 records)\n - total databases service: 4 (ex_dbservice, PGSpider, PostgreSQL, test_dbservice)\n - deleted databases service: 2 (ex_dbservice, test_dbservice)\n=> return 2 databases service non-deleted: PGSpider, PostgreSQL",
        "x": 460,
        "y": 200,
        "wires": []
    },
    {
        "id": "67ff3c44478b825f",
        "type": "comment",
        "z": "853f3cc508a3240f",
        "name": "Test suite: List database service",
        "info": "",
        "x": 150,
        "y": 40,
        "wires": []
    },
    {
        "id": "391b7a0e56f4cc99",
        "type": "comment",
        "z": "853f3cc508a3240f",
        "g": "0e1610528c455702",
        "name": "Actual result from openmetadata node",
        "info": "",
        "x": 830,
        "y": 780,
        "wires": []
    },
    {
        "id": "a07b588ac02c789f",
        "type": "complete",
        "z": "853f3cc508a3240f",
        "g": "0e1610528c455702",
        "name": "",
        "scope": [
            "05bee43833f6ad31"
        ],
        "uncaught": false,
        "x": 450,
        "y": 840,
        "wires": [
            [
                "01223cba26843707"
            ]
        ]
    },
    {
        "id": "aee09ed439fae89f",
        "type": "comment",
        "z": "853f3cc508a3240f",
        "g": "0e1610528c455702",
        "name": "TC02: List all database service with parameters all input",
        "info": " 1. Input: \n - fields: \"owner,tags\"\n - domain: \"storage\"\n - limit: 5\n - before, after: get value from another openmetadata node.\n - include: \"deleted\"\n\n 2. Expected: Show error message\n API error 404: domain instance for storage not found",
        "x": 420,
        "y": 520,
        "wires": []
    },
    {
        "id": "e758dd25030fba7c",
        "type": "openmetadata",
        "z": "853f3cc508a3240f",
        "g": "0e1610528c455702",
        "nodename": "",
        "openMetadataConfig": "ed60dcee1fc8d735",
        "resource": "list_database_services",
        "showOptParams": true,
        "q": "*",
        "name": "test_postgres",
        "id_param": "#",
        "fqn": "postgres.test",
        "startTs": "1",
        "endTs": "10",
        "index": "table_search_index",
        "deleted": "false",
        "from": 0,
        "size": 10,
        "sort_field": "_score",
        "sort_order": "desc",
        "track_total_hits": "false",
        "query_filter": "",
        "post_filter": "",
        "fetch_source": "true",
        "include_source_fields": "",
        "parent": "",
        "fields": "owner,tags",
        "domain": "storage",
        "service": "",
        "database": "",
        "disabled": "",
        "databaseSchema": "",
        "includeEmptyTestSuite": "true",
        "limit": "5",
        "before": "before",
        "after": "after",
        "include": "deleted",
        "qFieldType": "str",
        "nameFieldType": "str",
        "id_paramFieldType": "str",
        "fqnFieldType": "str",
        "startTsFieldType": "num",
        "endTsFieldType": "num",
        "indexFieldType": "str",
        "deletedFieldType": "bool",
        "fromFieldType": "num",
        "sizeFieldType": "num",
        "sort_fieldFieldType": "str",
        "sort_orderFieldType": "str",
        "track_total_hitsFieldType": "bool",
        "query_filterFieldType": "str",
        "post_filterFieldType": "str",
        "fetch_sourceFieldType": "bool",
        "include_source_fieldsFieldType": "str",
        "parentFieldType": "str",
        "fieldsFieldType": "str",
        "domainFieldType": "str",
        "serviceFieldType": "str",
        "databaseFieldType": "str",
        "disabledFieldType": "str",
        "databaseSchemaFieldType": "str",
        "includeEmptyTestSuiteFieldType": "bool",
        "limitFieldType": "num",
        "beforeFieldType": "msg",
        "afterFieldType": "msg",
        "includeFieldType": "str",
        "x": 780,
        "y": 820,
        "wires": [
            []
        ]
    },
    {
        "id": "ca541d5168958242",
        "type": "change",
        "z": "853f3cc508a3240f",
        "g": "cab4e22c30a4fac7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 2020,
        "wires": [
            [
                "82d66aa26afe55dc"
            ]
        ]
    },
    {
        "id": "b1abbd5fb2763263",
        "type": "comment",
        "z": "853f3cc508a3240f",
        "g": "cab4e22c30a4fac7",
        "name": "Actual result from openmetadata node",
        "info": "",
        "x": 770,
        "y": 1840,
        "wires": []
    },
    {
        "id": "520ff21e03b78921",
        "type": "comment",
        "z": "853f3cc508a3240f",
        "g": "cab4e22c30a4fac7",
        "name": "TC04: List all database service has include with invalid value",
        "info": " 1. Input: \n - include: \"test_value\"\n\n 2. Expected: Show error message\nAPI error 400: query param include must be one of [all, deleted, non-deleted]",
        "x": 440,
        "y": 1760,
        "wires": []
    },
    {
        "id": "f61fcf4cc3c7ead8",
        "type": "openmetadata",
        "z": "853f3cc508a3240f",
        "g": "cab4e22c30a4fac7",
        "nodename": "",
        "openMetadataConfig": "ed60dcee1fc8d735",
        "resource": "list_database_services",
        "showOptParams": true,
        "q": "*",
        "name": "test_postgres",
        "id_param": "#",
        "fqn": "postgres.test",
        "startTs": "1",
        "endTs": "10",
        "index": "table_search_index",
        "deleted": "false",
        "from": 0,
        "size": 10,
        "sort_field": "_score",
        "sort_order": "desc",
        "track_total_hits": "false",
        "query_filter": "",
        "post_filter": "",
        "fetch_source": "true",
        "include_source_fields": "",
        "parent": "",
        "fields": "",
        "domain": "",
        "service": "",
        "database": "",
        "disabled": "",
        "databaseSchema": "",
        "includeEmptyTestSuite": "true",
        "limit": "",
        "before": "",
        "after": "",
        "include": "test_value",
        "qFieldType": "str",
        "nameFieldType": "str",
        "id_paramFieldType": "str",
        "fqnFieldType": "str",
        "startTsFieldType": "num",
        "endTsFieldType": "num",
        "indexFieldType": "str",
        "deletedFieldType": "bool",
        "fromFieldType": "num",
        "sizeFieldType": "num",
        "sort_fieldFieldType": "str",
        "sort_orderFieldType": "str",
        "track_total_hitsFieldType": "bool",
        "query_filterFieldType": "str",
        "post_filterFieldType": "str",
        "fetch_sourceFieldType": "bool",
        "include_source_fieldsFieldType": "str",
        "parentFieldType": "str",
        "fieldsFieldType": "str",
        "domainFieldType": "str",
        "serviceFieldType": "str",
        "databaseFieldType": "str",
        "disabledFieldType": "str",
        "databaseSchemaFieldType": "str",
        "includeEmptyTestSuiteFieldType": "bool",
        "limitFieldType": "num",
        "beforeFieldType": "str",
        "afterFieldType": "str",
        "includeFieldType": "str",
        "x": 700,
        "y": 1880,
        "wires": [
            []
        ]
    },
    {
        "id": "bdbfd08207ab2b72",
        "type": "comment",
        "z": "853f3cc508a3240f",
        "g": "0e1610528c455702",
        "name": "Get before param",
        "info": "",
        "x": 720,
        "y": 560,
        "wires": []
    },
    {
        "id": "41e6a8aa7bb48ad4",
        "type": "comment",
        "z": "853f3cc508a3240f",
        "g": "0e1610528c455702",
        "name": "Get after param",
        "info": "",
        "x": 1040,
        "y": 600,
        "wires": []
    },
    {
        "id": "1cfaeb54d10751bc",
        "type": "change",
        "z": "853f3cc508a3240f",
        "g": "0e1610528c455702",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "before",
                "pt": "msg",
                "to": "payload.paging.before",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 720,
        "wires": [
            [
                "b19f26350762e237"
            ]
        ]
    },
    {
        "id": "29f5b5b28f2c469c",
        "type": "change",
        "z": "853f3cc508a3240f",
        "g": "0e1610528c455702",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "after",
                "pt": "msg",
                "to": "payload.paging.after",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1030,
        "y": 680,
        "wires": [
            [
                "e758dd25030fba7c"
            ]
        ]
    },
    {
        "id": "01223cba26843707",
        "type": "change",
        "z": "853f3cc508a3240f",
        "g": "0e1610528c455702",
        "name": "delete msg.before and msg.after",
        "rules": [
            {
                "t": "delete",
                "p": "after",
                "pt": "msg"
            },
            {
                "t": "delete",
                "p": "before",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 470,
        "y": 900,
        "wires": [
            [
                "3d8a2504f4f72efc"
            ]
        ]
    },
    {
        "id": "a736f09eece0b4d2",
        "type": "comment",
        "z": "853f3cc508a3240f",
        "g": "0e1610528c455702",
        "name": "Clean flow's variable",
        "info": "",
        "x": 470,
        "y": 800,
        "wires": []
    },
    {
        "id": "e79703e29ef7c886",
        "type": "change",
        "z": "853f3cc508a3240f",
        "g": "0e1610528c455702",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "after",
                "pt": "msg",
                "to": "payload.paging.after",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 640,
        "wires": [
            [
                "0d67fa5465cd8285"
            ]
        ]
    },
    {
        "id": "10fec100a7129a62",
        "type": "json",
        "z": "853f3cc508a3240f",
        "g": "14bc8aefafcd06be",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 690,
        "y": 1560,
        "wires": [
            [
                "218eb660b11a792b"
            ]
        ]
    },
    {
        "id": "f6eb933b5e5434ca",
        "type": "change",
        "z": "853f3cc508a3240f",
        "g": "14bc8aefafcd06be",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "expected",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1130,
        "y": 1600,
        "wires": [
            [
                "a16e950852a4f2d2"
            ]
        ]
    },
    {
        "id": "218eb660b11a792b",
        "type": "change",
        "z": "853f3cc508a3240f",
        "g": "14bc8aefafcd06be",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 1600,
        "wires": [
            [
                "aa944d2e20e2f55c"
            ]
        ]
    },
    {
        "id": "aa944d2e20e2f55c",
        "type": "http request",
        "z": "853f3cc508a3240f",
        "g": "14bc8aefafcd06be",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://10.0.2.15:8585/api/v1/services/databaseServices?fields=owner%2Ctags&limit=15&before={{{before}}}&include=all",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "bearer",
        "senderr": false,
        "headers": [],
        "x": 1110,
        "y": 1520,
        "wires": [
            [
                "5ca25ff36168b3ff"
            ]
        ]
    },
    {
        "id": "5ca25ff36168b3ff",
        "type": "json",
        "z": "853f3cc508a3240f",
        "g": "14bc8aefafcd06be",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 1090,
        "y": 1560,
        "wires": [
            [
                "f6eb933b5e5434ca"
            ]
        ]
    },
    {
        "id": "44c43d80e8be143b",
        "type": "comment",
        "z": "853f3cc508a3240f",
        "g": "14bc8aefafcd06be",
        "name": "Actual result from openmetadata node",
        "info": "",
        "x": 790,
        "y": 1480,
        "wires": []
    },
    {
        "id": "4e8bf5e454e58235",
        "type": "comment",
        "z": "853f3cc508a3240f",
        "g": "14bc8aefafcd06be",
        "name": "Expected result from REST API",
        "info": "",
        "x": 1170,
        "y": 1480,
        "wires": []
    },
    {
        "id": "efcff8868c110a10",
        "type": "complete",
        "z": "853f3cc508a3240f",
        "g": "14bc8aefafcd06be",
        "name": "",
        "scope": [
            "3d8a2504f4f72efc"
        ],
        "uncaught": false,
        "x": 410,
        "y": 1540,
        "wires": [
            [
                "5a5bbca753b4ba70"
            ]
        ]
    },
    {
        "id": "eeb7c328322c3e3f",
        "type": "comment",
        "z": "853f3cc508a3240f",
        "g": "14bc8aefafcd06be",
        "name": "TC03: List all database service with valid parameters",
        "info": " 1. Input: default value\n - fields: \"owner,tags\"\n - limit: 15\n - before: get value from another openmetadata node.\n - include: \"all\"\n\n 2. Expected: Return all database service (max 15 records)\n return total databases service: 4 (ex_dbservice, PGSpider, PostgreSQL, test_dbservice)\n\n",
        "x": 410,
        "y": 1200,
        "wires": []
    },
    {
        "id": "206ff924fa5c88f4",
        "type": "comment",
        "z": "853f3cc508a3240f",
        "g": "14bc8aefafcd06be",
        "name": "Get before param",
        "info": "",
        "x": 720,
        "y": 1260,
        "wires": []
    },
    {
        "id": "2dbb0a53c7025036",
        "type": "change",
        "z": "853f3cc508a3240f",
        "g": "14bc8aefafcd06be",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "before",
                "pt": "msg",
                "to": "payload.paging.before",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 720,
        "y": 1420,
        "wires": [
            [
                "62c303fbddea4832"
            ]
        ]
    },
    {
        "id": "5a5bbca753b4ba70",
        "type": "change",
        "z": "853f3cc508a3240f",
        "g": "14bc8aefafcd06be",
        "name": "",
        "rules": [
            {
                "t": "delete",
                "p": "before",
                "pt": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 430,
        "y": 1600,
        "wires": [
            [
                "1d87441534043380"
            ]
        ]
    },
    {
        "id": "88dcf2207a6c92e9",
        "type": "comment",
        "z": "853f3cc508a3240f",
        "g": "14bc8aefafcd06be",
        "name": "Clean flow's variable",
        "info": "",
        "x": 430,
        "y": 1500,
        "wires": []
    },
    {
        "id": "2a5b8c40d84c1b92",
        "type": "change",
        "z": "853f3cc508a3240f",
        "g": "14bc8aefafcd06be",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "after",
                "pt": "msg",
                "to": "payload.paging.after",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 710,
        "y": 1340,
        "wires": [
            [
                "12256d20e95d2be4"
            ]
        ]
    },
    {
        "id": "fc6f7a1c18650066",
        "type": "json",
        "z": "853f3cc508a3240f",
        "g": "10e6f2ee93dff354",
        "name": "",
        "property": "payload",
        "action": "str",
        "pretty": false,
        "x": 1150,
        "y": 320,
        "wires": [
            [
                "e4a3aa533b608922"
            ]
        ]
    },
    {
        "id": "05223af5b7921171",
        "type": "openmetadata",
        "z": "853f3cc508a3240f",
        "g": "10e6f2ee93dff354",
        "nodename": "",
        "openMetadataConfig": "ed60dcee1fc8d735",
        "resource": "list_database_services",
        "showOptParams": true,
        "q": "*",
        "name": "PostgreSQL",
        "id_param": "#",
        "fqn": "postgres.test",
        "startTs": "1",
        "endTs": "10",
        "index": "table_search_index",
        "deleted": "false",
        "from": 0,
        "size": 10,
        "sort_field": "_score",
        "sort_order": "desc",
        "track_total_hits": "false",
        "query_filter": "",
        "post_filter": "",
        "fetch_source": "true",
        "include_source_fields": "",
        "parent": "",
        "fields": "",
        "domain": "",
        "service": "",
        "database": "",
        "disabled": "",
        "databaseSchema": "",
        "includeEmptyTestSuite": "true",
        "limit": "",
        "before": "",
        "after": "",
        "include": "",
        "qFieldType": "str",
        "nameFieldType": "str",
        "id_paramFieldType": "str",
        "fqnFieldType": "str",
        "startTsFieldType": "num",
        "endTsFieldType": "num",
        "indexFieldType": "str",
        "deletedFieldType": "bool",
        "fromFieldType": "num",
        "sizeFieldType": "num",
        "sort_fieldFieldType": "str",
        "sort_orderFieldType": "str",
        "track_total_hitsFieldType": "bool",
        "query_filterFieldType": "str",
        "post_filterFieldType": "str",
        "fetch_sourceFieldType": "bool",
        "include_source_fieldsFieldType": "str",
        "parentFieldType": "str",
        "fieldsFieldType": "str",
        "domainFieldType": "str",
        "serviceFieldType": "str",
        "databaseFieldType": "str",
        "disabledFieldType": "str",
        "databaseSchemaFieldType": "str",
        "includeEmptyTestSuiteFieldType": "bool",
        "limitFieldType": "num",
        "beforeFieldType": "str",
        "afterFieldType": "str",
        "includeFieldType": "str",
        "x": 780,
        "y": 280,
        "wires": [
            [
                "e39f1f7ef4875618"
            ]
        ]
    },
    {
        "id": "81052b6c356aa883",
        "type": "openmetadata",
        "z": "853f3cc508a3240f",
        "g": "0e1610528c455702",
        "nodename": "",
        "openMetadataConfig": "ed60dcee1fc8d735",
        "resource": "list_database_services",
        "showOptParams": true,
        "q": "*",
        "name": "PostgreSQL",
        "id_param": "#",
        "fqn": "postgres.test",
        "startTs": "1",
        "endTs": "10",
        "index": "table_search_index",
        "deleted": "false",
        "from": 0,
        "size": 10,
        "sort_field": "_score",
        "sort_order": "desc",
        "track_total_hits": "false",
        "query_filter": "",
        "post_filter": "",
        "fetch_source": "true",
        "include_source_fields": "",
        "parent": "",
        "fields": "",
        "domain": "",
        "service": "",
        "database": "",
        "disabled": "",
        "databaseSchema": "",
        "includeEmptyTestSuite": "true",
        "limit": "2",
        "before": "",
        "after": "",
        "include": "",
        "qFieldType": "str",
        "nameFieldType": "str",
        "id_paramFieldType": "str",
        "fqnFieldType": "str",
        "startTsFieldType": "num",
        "endTsFieldType": "num",
        "indexFieldType": "str",
        "deletedFieldType": "bool",
        "fromFieldType": "num",
        "sizeFieldType": "num",
        "sort_fieldFieldType": "str",
        "sort_orderFieldType": "str",
        "track_total_hitsFieldType": "bool",
        "query_filterFieldType": "str",
        "post_filterFieldType": "str",
        "fetch_sourceFieldType": "bool",
        "include_source_fieldsFieldType": "str",
        "parentFieldType": "str",
        "fieldsFieldType": "str",
        "domainFieldType": "str",
        "serviceFieldType": "str",
        "databaseFieldType": "str",
        "disabledFieldType": "str",
        "databaseSchemaFieldType": "str",
        "includeEmptyTestSuiteFieldType": "bool",
        "limitFieldType": "num",
        "beforeFieldType": "str",
        "afterFieldType": "str",
        "includeFieldType": "str",
        "x": 720,
        "y": 600,
        "wires": [
            [
                "e79703e29ef7c886"
            ]
        ]
    },
    {
        "id": "0d67fa5465cd8285",
        "type": "openmetadata",
        "z": "853f3cc508a3240f",
        "g": "0e1610528c455702",
        "nodename": "",
        "openMetadataConfig": "ed60dcee1fc8d735",
        "resource": "list_database_services",
        "showOptParams": true,
        "q": "*",
        "name": "PostgreSQL",
        "id_param": "#",
        "fqn": "postgres.test",
        "startTs": "1",
        "endTs": "10",
        "index": "table_search_index",
        "deleted": "false",
        "from": 0,
        "size": 10,
        "sort_field": "_score",
        "sort_order": "desc",
        "track_total_hits": "false",
        "query_filter": "",
        "post_filter": "",
        "fetch_source": "true",
        "include_source_fields": "",
        "parent": "",
        "fields": "",
        "domain": "",
        "service": "",
        "database": "",
        "disabled": "",
        "databaseSchema": "",
        "includeEmptyTestSuite": "true",
        "limit": "1",
        "before": "",
        "after": "after",
        "include": "",
        "qFieldType": "str",
        "nameFieldType": "str",
        "id_paramFieldType": "str",
        "fqnFieldType": "str",
        "startTsFieldType": "num",
        "endTsFieldType": "num",
        "indexFieldType": "str",
        "deletedFieldType": "bool",
        "fromFieldType": "num",
        "sizeFieldType": "num",
        "sort_fieldFieldType": "str",
        "sort_orderFieldType": "str",
        "track_total_hitsFieldType": "bool",
        "query_filterFieldType": "str",
        "post_filterFieldType": "str",
        "fetch_sourceFieldType": "bool",
        "include_source_fieldsFieldType": "str",
        "parentFieldType": "str",
        "fieldsFieldType": "str",
        "domainFieldType": "str",
        "serviceFieldType": "str",
        "databaseFieldType": "str",
        "disabledFieldType": "str",
        "databaseSchemaFieldType": "str",
        "includeEmptyTestSuiteFieldType": "bool",
        "limitFieldType": "num",
        "beforeFieldType": "str",
        "afterFieldType": "msg",
        "includeFieldType": "str",
        "x": 720,
        "y": 680,
        "wires": [
            [
                "1cfaeb54d10751bc"
            ]
        ]
    },
    {
        "id": "b19f26350762e237",
        "type": "openmetadata",
        "z": "853f3cc508a3240f",
        "g": "0e1610528c455702",
        "nodename": "",
        "openMetadataConfig": "ed60dcee1fc8d735",
        "resource": "list_database_services",
        "showOptParams": true,
        "q": "*",
        "name": "PostgreSQL",
        "id_param": "#",
        "fqn": "postgres.test",
        "startTs": "1",
        "endTs": "10",
        "index": "table_search_index",
        "deleted": "false",
        "from": 0,
        "size": 10,
        "sort_field": "_score",
        "sort_order": "desc",
        "track_total_hits": "false",
        "query_filter": "",
        "post_filter": "",
        "fetch_source": "true",
        "include_source_fields": "",
        "parent": "",
        "fields": "",
        "domain": "",
        "service": "",
        "database": "",
        "disabled": "",
        "databaseSchema": "",
        "includeEmptyTestSuite": "true",
        "limit": "1",
        "before": "",
        "after": "",
        "include": "non-deleted",
        "qFieldType": "str",
        "nameFieldType": "str",
        "id_paramFieldType": "str",
        "fqnFieldType": "str",
        "startTsFieldType": "num",
        "endTsFieldType": "num",
        "indexFieldType": "str",
        "deletedFieldType": "bool",
        "fromFieldType": "num",
        "sizeFieldType": "num",
        "sort_fieldFieldType": "str",
        "sort_orderFieldType": "str",
        "track_total_hitsFieldType": "bool",
        "query_filterFieldType": "str",
        "post_filterFieldType": "str",
        "fetch_sourceFieldType": "bool",
        "include_source_fieldsFieldType": "str",
        "parentFieldType": "str",
        "fieldsFieldType": "str",
        "domainFieldType": "str",
        "serviceFieldType": "str",
        "databaseFieldType": "str",
        "disabledFieldType": "str",
        "databaseSchemaFieldType": "str",
        "includeEmptyTestSuiteFieldType": "bool",
        "limitFieldType": "num",
        "beforeFieldType": "str",
        "afterFieldType": "str",
        "includeFieldType": "str",
        "x": 1040,
        "y": 640,
        "wires": [
            [
                "29f5b5b28f2c469c"
            ]
        ]
    },
    {
        "id": "091b54ae79ac3c22",
        "type": "openmetadata",
        "z": "853f3cc508a3240f",
        "g": "14bc8aefafcd06be",
        "nodename": "",
        "openMetadataConfig": "ed60dcee1fc8d735",
        "resource": "list_database_services",
        "showOptParams": true,
        "q": "*",
        "name": "PostgreSQL",
        "id_param": "#",
        "fqn": "postgres.test",
        "startTs": "1",
        "endTs": "10",
        "index": "table_search_index",
        "deleted": "false",
        "from": 0,
        "size": 10,
        "sort_field": "_score",
        "sort_order": "desc",
        "track_total_hits": "false",
        "query_filter": "",
        "post_filter": "",
        "fetch_source": "true",
        "include_source_fields": "",
        "parent": "",
        "fields": "",
        "domain": "",
        "service": "",
        "database": "",
        "disabled": "",
        "databaseSchema": "",
        "includeEmptyTestSuite": "true",
        "limit": "2",
        "before": "",
        "after": "",
        "include": "non-deleted",
        "qFieldType": "str",
        "nameFieldType": "str",
        "id_paramFieldType": "str",
        "fqnFieldType": "str",
        "startTsFieldType": "num",
        "endTsFieldType": "num",
        "indexFieldType": "str",
        "deletedFieldType": "bool",
        "fromFieldType": "num",
        "sizeFieldType": "num",
        "sort_fieldFieldType": "str",
        "sort_orderFieldType": "str",
        "track_total_hitsFieldType": "bool",
        "query_filterFieldType": "str",
        "post_filterFieldType": "str",
        "fetch_sourceFieldType": "bool",
        "include_source_fieldsFieldType": "str",
        "parentFieldType": "str",
        "fieldsFieldType": "str",
        "domainFieldType": "str",
        "serviceFieldType": "str",
        "databaseFieldType": "str",
        "disabledFieldType": "str",
        "databaseSchemaFieldType": "str",
        "includeEmptyTestSuiteFieldType": "bool",
        "limitFieldType": "num",
        "beforeFieldType": "str",
        "afterFieldType": "str",
        "includeFieldType": "str",
        "x": 720,
        "y": 1300,
        "wires": [
            [
                "2a5b8c40d84c1b92"
            ]
        ]
    },
    {
        "id": "12256d20e95d2be4",
        "type": "openmetadata",
        "z": "853f3cc508a3240f",
        "g": "14bc8aefafcd06be",
        "nodename": "",
        "openMetadataConfig": "ed60dcee1fc8d735",
        "resource": "list_database_services",
        "showOptParams": true,
        "q": "*",
        "name": "PostgreSQL",
        "id_param": "#",
        "fqn": "postgres.test",
        "startTs": "1",
        "endTs": "10",
        "index": "table_search_index",
        "deleted": "false",
        "from": 0,
        "size": 10,
        "sort_field": "_score",
        "sort_order": "desc",
        "track_total_hits": "false",
        "query_filter": "",
        "post_filter": "",
        "fetch_source": "true",
        "include_source_fields": "",
        "parent": "",
        "fields": "",
        "domain": "",
        "service": "",
        "database": "",
        "disabled": "",
        "databaseSchema": "",
        "includeEmptyTestSuite": "true",
        "limit": "1",
        "before": "",
        "after": "after",
        "include": "non-deleted",
        "qFieldType": "str",
        "nameFieldType": "str",
        "id_paramFieldType": "str",
        "fqnFieldType": "str",
        "startTsFieldType": "num",
        "endTsFieldType": "num",
        "indexFieldType": "str",
        "deletedFieldType": "bool",
        "fromFieldType": "num",
        "sizeFieldType": "num",
        "sort_fieldFieldType": "str",
        "sort_orderFieldType": "str",
        "track_total_hitsFieldType": "bool",
        "query_filterFieldType": "str",
        "post_filterFieldType": "str",
        "fetch_sourceFieldType": "bool",
        "include_source_fieldsFieldType": "str",
        "parentFieldType": "str",
        "fieldsFieldType": "str",
        "domainFieldType": "str",
        "serviceFieldType": "str",
        "databaseFieldType": "str",
        "disabledFieldType": "str",
        "databaseSchemaFieldType": "str",
        "includeEmptyTestSuiteFieldType": "bool",
        "limitFieldType": "num",
        "beforeFieldType": "str",
        "afterFieldType": "msg",
        "includeFieldType": "str",
        "x": 720,
        "y": 1380,
        "wires": [
            [
                "2dbb0a53c7025036"
            ]
        ]
    },
    {
        "id": "62c303fbddea4832",
        "type": "openmetadata",
        "z": "853f3cc508a3240f",
        "g": "14bc8aefafcd06be",
        "nodename": "",
        "openMetadataConfig": "ed60dcee1fc8d735",
        "resource": "list_database_services",
        "showOptParams": true,
        "q": "*",
        "name": "PostgreSQL",
        "id_param": "#",
        "fqn": "postgres.test",
        "startTs": "1",
        "endTs": "10",
        "index": "table_search_index",
        "deleted": "false",
        "from": 0,
        "size": 10,
        "sort_field": "_score",
        "sort_order": "desc",
        "track_total_hits": "false",
        "query_filter": "",
        "post_filter": "",
        "fetch_source": "true",
        "include_source_fields": "",
        "parent": "",
        "fields": "owner,tags",
        "domain": "",
        "service": "",
        "database": "",
        "disabled": "",
        "databaseSchema": "",
        "includeEmptyTestSuite": "true",
        "limit": "15",
        "before": "before",
        "after": "",
        "include": "all",
        "qFieldType": "str",
        "nameFieldType": "str",
        "id_paramFieldType": "str",
        "fqnFieldType": "str",
        "startTsFieldType": "num",
        "endTsFieldType": "num",
        "indexFieldType": "str",
        "deletedFieldType": "bool",
        "fromFieldType": "num",
        "sizeFieldType": "num",
        "sort_fieldFieldType": "str",
        "sort_orderFieldType": "str",
        "track_total_hitsFieldType": "bool",
        "query_filterFieldType": "str",
        "post_filterFieldType": "str",
        "fetch_sourceFieldType": "bool",
        "include_source_fieldsFieldType": "str",
        "parentFieldType": "str",
        "fieldsFieldType": "str",
        "domainFieldType": "str",
        "serviceFieldType": "str",
        "databaseFieldType": "str",
        "disabledFieldType": "str",
        "databaseSchemaFieldType": "str",
        "includeEmptyTestSuiteFieldType": "bool",
        "limitFieldType": "num",
        "beforeFieldType": "msg",
        "afterFieldType": "str",
        "includeFieldType": "str",
        "x": 720,
        "y": 1520,
        "wires": [
            [
                "10fec100a7129a62"
            ]
        ]
    },
    {
        "id": "a29b742c02621d9f",
        "type": "catch",
        "z": "853f3cc508a3240f",
        "g": "0e1610528c455702",
        "name": "",
        "scope": [
            "e758dd25030fba7c"
        ],
        "uncaught": false,
        "x": 750,
        "y": 880,
        "wires": [
            [
                "9efa0940dc0acf4c"
            ]
        ]
    },
    {
        "id": "9efa0940dc0acf4c",
        "type": "function",
        "z": "853f3cc508a3240f",
        "g": "0e1610528c455702",
        "name": "get error message",
        "func": "msg.payload = msg.error.message;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 790,
        "y": 920,
        "wires": [
            [
                "88c46a12188121e4"
            ]
        ]
    },
    {
        "id": "88c46a12188121e4",
        "type": "change",
        "z": "853f3cc508a3240f",
        "g": "0e1610528c455702",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "result",
                "pt": "msg",
                "to": "payload",
                "tot": "msg",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 780,
        "y": 960,
        "wires": [
            [
                "7cd085038970e4cd"
            ]
        ]
    },
    {
        "id": "7cd085038970e4cd",
        "type": "change",
        "z": "853f3cc508a3240f",
        "g": "0e1610528c455702",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "expected",
                "pt": "msg",
                "to": "API error 404: domain instance for storage not found",
                "tot": "str",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1070,
        "y": 900,
        "wires": [
            [
                "5053f6b73432d083"
            ]
        ]
    },
    {
        "id": "b7d14aa7600ed23e",
        "type": "catch",
        "z": "853f3cc508a3240f",
        "g": "cab4e22c30a4fac7",
        "name": "",
        "scope": [
            "f61fcf4cc3c7ead8"
        ],
        "uncaught": false,
        "x": 690,
        "y": 1940,
        "wires": [
            [
                "791866d5a7b7a81c"
            ]
        ]
    },
    {
        "id": "791866d5a7b7a81c",
        "type": "function",
        "z": "853f3cc508a3240f",
        "g": "cab4e22c30a4fac7",
        "name": "get error message",
        "func": "msg.payload = msg.error.message;\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 730,
        "y": 1980,
        "wires": [
            [
                "ca541d5168958242"
            ]
        ]
    },
    {
        "id": "82d66aa26afe55dc",
        "type": "change",
        "z": "853f3cc508a3240f",
        "g": "cab4e22c30a4fac7",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "expected",
                "pt": "msg",
                "to": "API error 400: query param include must be one of [all, deleted, non-deleted]",
                "tot": "str",
                "dc": true
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 990,
        "y": 1940,
        "wires": [
            [
                "08fe9c7be6c0e760"
            ]
        ]
    },
    {
        "id": "7225d451d8b45d66",
        "type": "test inject",
        "z": "853f3cc508a3240f",
        "g": "10e6f2ee93dff354",
        "name": "",
        "onstart": false,
        "tests": "return [{\n\tlabel: 'test 1',\n\tassert: function (msg) {\n        // msg.result === msg.expected;\n\t\tshould(msg.result).is.exactly(msg.expected);\n\t}\n}];",
        "x": 440,
        "y": 280,
        "wires": [
            [
                "05223af5b7921171"
            ]
        ]
    },
    {
        "id": "05bee43833f6ad31",
        "type": "test inject",
        "z": "853f3cc508a3240f",
        "g": "0e1610528c455702",
        "name": "",
        "onstart": false,
        "tests": "return [{\n\tlabel: 'test 1',\n\tassert: function (msg) {\n        // msg.result === msg.expected;\n\t\tshould(msg.result).is.exactly(msg.expected);\n\t}\n}];",
        "x": 440,
        "y": 600,
        "wires": [
            [
                "81052b6c356aa883"
            ]
        ]
    },
    {
        "id": "1d87441534043380",
        "type": "test inject",
        "z": "853f3cc508a3240f",
        "g": "cab4e22c30a4fac7",
        "name": "",
        "onstart": false,
        "tests": "return [{\n\tlabel: 'test 1',\n\tassert: function (msg) {\n        // msg.result === msg.expected;\n\t\tshould(msg.result).is.exactly(msg.expected);\n\t}\n}];",
        "x": 420,
        "y": 1820,
        "wires": [
            [
                "f61fcf4cc3c7ead8"
            ]
        ]
    },
    {
        "id": "3d8a2504f4f72efc",
        "type": "test inject",
        "z": "853f3cc508a3240f",
        "g": "14bc8aefafcd06be",
        "name": "",
        "onstart": false,
        "tests": "return [{\n\tlabel: 'test 1',\n\tassert: function (msg) {\n        // msg.result === msg.expected;\n\t\tshould(msg.result).is.exactly(msg.expected);\n\t}\n}];",
        "x": 400,
        "y": 1300,
        "wires": [
            [
                "091b54ae79ac3c22"
            ]
        ]
    },
    {
        "id": "01777fcb3499564a",
        "type": "assert",
        "z": "853f3cc508a3240f",
        "g": "10e6f2ee93dff354",
        "name": "",
        "x": 1390,
        "y": 300,
        "wires": [
            []
        ]
    },
    {
        "id": "5053f6b73432d083",
        "type": "assert",
        "z": "853f3cc508a3240f",
        "g": "0e1610528c455702",
        "name": "",
        "x": 1270,
        "y": 900,
        "wires": [
            []
        ]
    },
    {
        "id": "08fe9c7be6c0e760",
        "type": "assert",
        "z": "853f3cc508a3240f",
        "g": "cab4e22c30a4fac7",
        "name": "",
        "x": 1210,
        "y": 1940,
        "wires": [
            []
        ]
    },
    {
        "id": "a16e950852a4f2d2",
        "type": "assert",
        "z": "853f3cc508a3240f",
        "g": "14bc8aefafcd06be",
        "name": "",
        "x": 1330,
        "y": 1540,
        "wires": [
            []
        ]
    },
    {
        "id": "ed60dcee1fc8d735",
        "type": "openMetadataConfig",
        "name": "token",
        "endpoint": "http://10.0.2.15:8585/api/v1/",
        "endpointFieldType": "str",
        "user": "",
        "userFieldType": "str",
        "password": "",
        "passwordFieldType": "str",
        "tokenInput": "eyJraWQiOiJHYjM4OWEtOWY3Ni1nZGpzLWE5MmotMDI0MmJrOTQzNTYiLCJhbGciOiJSUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJvcGVuLW1ldGFkYXRhLm9yZyIsInN1YiI6ImluZ2VzdGlvbi1ib3QiLCJlbWFpbCI6ImluZ2VzdGlvbi1ib3RAb3Blbm1ldGFkYXRhLm9yZyIsImlzQm90Ijp0cnVlLCJ0b2tlblR5cGUiOiJCT1QiLCJpYXQiOjE3MDI5NTM1MTYsImV4cCI6bnVsbH0.ysLDuWqsA8TA5TqwPp0cm8kLu0yQc-RbYBMyMGSY-JCtgR1zRAKpjhAczzFcMHQgXbCGtoXZGE4-OgWDXBoHFFeUXlYxCOFXJOz6K3xPgWM0u6OM0xRYAVGzqpWPzZDO0Wgg5dEV_j86pjCYq4EOuLwGHXhKoFwIi_ezwj8jeUBsmLy0SnaHhE1T4u_hcoikNOVOwpsNq7k9EJigLuIvftfZJacWAzAsNJkwVQymdNNufimUsI4CeZYIowgpYQV2EAoxOBOrnUUeyBx49nmAJAMqbqIzl_rP8KW1EL---Q_mYaHL1o0Qc06JufkpTf3Ir5--CnVZZjEyfYQjJI0jCg",
        "tokenInputFieldType": "str",
        "token": "",
        "proxy": "",
        "proxyFieldType": "str",
        "noproxy": false
    }
]